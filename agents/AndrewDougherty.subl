(f "AndrewDougherty")
(a '(#$isa #$AndrewDougherty #$LogicmooCollaboratorsWhoConsentToBeTrackedInKB) #$LogicmooAgentMt)
(a '(#$isa #$AndrewDougherty #$AIResearcher) #$LogicmooAgentMt)

(define ygoals? () (ret (q '(#$projectGoal #$AndrewDougherty #$LogicmooProject ?Y) #$BaseKB)))
(define ygoal (goal) (ret (cyc-assert (list #$projectGoal #$AndrewDougherty #$LogicmooProject (list #$GoalFn goal)) #$BaseKB)))
(define remove-ygoal (goal) (ret (cyc-unassert (list #$projectGoal #$AndrewDougherty #$LogicmooProject (list #$GoalFn goal)) #$BaseKB)))

(add-goals
 #$AndrewDougherty
 (list
  "Improve the integration between Cyc and Emacs by writing functions which allow us to introspect on subl functions."
  "Make it so we can do cmh-act-on-referent-and-push-onto-ring on #$recruit and have it return the answer into the freekbs2-stack"
  "Write a subl function alias: (alias 'p 'print-special) or whatever that defines a given function to be a shortcut for another, like shell aliases."
  "find-or-create a subl search function for subl commands"
  "make a subl function that sorts printed output, such as of apropos, if possible"
  "we need to derive from looking at other assertions assertions that could apply to our constants.  for instance, looking at (c #$ZermeloFraenkelSetTheory), I saw #<AS:(#$theoreticalField #$ZermeloFraenkelSetTheory #$SetTheory):#$HistoryOfScienceDataMt>"
  "gather all semweb ontologies for starters"
  "should have it try different things and induce what the actual function is"
  "try replacing #$TemporalThing with #$Book-CW"
  ))

(a '(#$alias #$AndrewDougherty "aindilis") #$LogicmooAgentMt)
